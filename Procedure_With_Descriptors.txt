public Stream<Output> useItemDesc(
    @Name("knight") Node knight,
    @Name("newItem") Node newItem
  ) {
    boolean usageSuccessful = false;
    Set<Node> items;
    String msg = null;
    String now = new SimpleDateFormat("yyyyMMdd_HHmmss")
      .format(Calendar.getInstance().getTime());
    int countArmour = 0;
    int countWeapon = 0;
    int countShield = 0;

    // fetch knight name
    String knightName = NodeRep.Knight.prpName.getValueOn(knight);

    // fetch newItem info
    ItemKind newItemType = NodeRep.Item.prpItemKind.getValueOn(newItem);
    String newItemName = NodeRep.Item.prpName.getValueOn(newItem);

    // fetch items of knight
    items = NodeRep.Knight.usedItems(knight).collect(Collectors.toSet());

    // check if knight is already using the newItem
    if (items.contains(newItem)) {
      msg =
        String.format(
          MESSAGE_SUCCESS_OLD,
          knightName,
          newItemName,
          newItemType.dbValue()
        );
      return Stream.of(new Output(true, msg));
    }

    // count items by ItemKind
    for (Node item : items) {
      ItemKind itemKind = NodeRep.Item.prpItemKind.getValueOn(item);
      switch (itemKind) {
        case ARMOUR:
          countArmour++;
          break;
        case WEAPON:
          countWeapon++;
          break;
        case SHIELD:
          countShield++;
          break;
        default:
          break;
      }
    }

    // check whether item could additionally be used
    switch (newItemType) {
      case ARMOUR:
        if (countArmour == 0) {
          RelationshipRep.Uses.create(knight, newItem, now);
          usageSuccessful = true;
          msg = MESSAGE_SUCCESS_NEW;
        } else {
          msg = MESSAGE_FAIL_ARMOUR;
        }
        break;
      case WEAPON:
        if (countWeapon + countShield < 2) {
          RelationshipRep.Uses.create(knight, newItem, now);
          usageSuccessful = true;
          msg = MESSAGE_SUCCESS_NEW;
        } else if (countWeapon >= 2) {
          msg = MESSAGE_FAIL_TWO_WEAPONS;
        } else {
          msg = MESSAGE_FAIL_ONE_WEAPON_ONE_SHIELD;
        }
        break;
      case SHIELD:
        if (countWeapon < 2 && countShield == 0) {
          RelationshipRep.Uses.create(knight, newItem, now);
          usageSuccessful = true;
          msg = MESSAGE_SUCCESS_NEW;
        } else if (countWeapon >= 2) {
          msg = MESSAGE_FAIL_TWO_WEAPONS;
        } else {
          msg = MESSAGE_FAIL_ONE_SHIELD;
        }
        break;
      case POTION:
        usageSuccessful = true;
        break;
      default:
        throw new NotImplementedException("Unknown Enum item.");
    }
    msg = String.format(msg, knightName, newItemName, newItemType.dbValue());
    return Stream.of(new Output(usageSuccessful, msg));
  }